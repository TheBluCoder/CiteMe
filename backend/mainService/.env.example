CX= # your google programmable custom search engine id
GPSE_API_KEY= # your google programmable #search engine api key
GROQ_API_KEY= # your groq api key
GOOGLE_API_KEY= # your gemini google api key
MIXBREAD_API_KEY= # your mixbread api key
PINECONE_API_KEY= # your pinecone api key
AZURE_MODELS_ENDPOINT = # your azure model endpoint for citation generation
CREDIBILITY_API_URL = # your credibility api url


#NOTE:
# CREDIBILITY_API_URL is the url of the credibility api that is used to get the credibility metrics for the sources
# CREDIBILITY_API_URL is optional and is only used if the CREDIBILITY_API_URL environment variable is set
# If the CREDIBILITY_API_URL environment variable is not set, the credibility metrics will not be fetched


#AZURE_MODELS_ENDPOINT is the endpoint of the azure model that is used for citation generation
#AZURE_MODELS_ENDPOINT is required and is used to generate the citations for the sources


#MIXBREAD_API_KEY is the api key of the mixbread api that is used to rerank the sources
#MIXBREAD_API_KEY is required and is used to rerank the sources


#PINECONE_API_KEY is the api key of the pinecone api that is used to store the embeddings of the sources
#PINECONE_API_KEY is required and is used to store the embeddings of the sources    


#GPSE_API_KEY is the api key of the google programmable search engine api that is used to search the web
#GPSE_API_KEY is required and is used to search the web


#GOOGLE_API_KEY is the api key for gemini google api
#GOOGLE_API_KEY it is required and is used to merge the chunk of cited citations returned by the azure model

#CX is the custom search engine id for google programmable search engine

#All the above can be replaced by writing your own functions for the respective services
#for instance, one could decide to use gemini to generate the intext citation and references rather than using an azure 
#hosted model. Hence all you need to do is write your own cite function/module and replace the azure cite function in the citation service file









